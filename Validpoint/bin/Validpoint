#!/usr/bin/env node

/**
 * CW website validator access hub.
 * 
 * Invoking: ./bin/Validpoint -c [command] (-d [domain1,[domain2,[domain3...]]])
 * Invocation without "command" or "domain" is synonymous with "all" as the command or domain
 * 
 * TODO: handle unhandled Promise rejections
 */

require( "strict-mode" )(
    () =>
    {
		// Get an instance of the runner
		const CW_Runner = require( "../../classes/CW_Runner.js" );
		const runner = new CW_Runner();

		// And an instance of the parser
		const CW_InputParser =  require( "../../classes/CW_InputParser.js" );
		let config = null;

		// parse the requested command from the command line arguments, then run the command
		let argv = require( "yargs" ).argv;

		let cmd = (argv.c) ? argv.c : "all";
		let domain = (argv.d) ? argv.d : "all";

		let runObjects = CW_InputParser.makeRunnerObjects( domain );
		runObjects.forEach(
			runObject =>
			{
				let parser = new CW_InputParser( runObject.file );

				parser.init(
					function() // init callback
					{
						try
						{
		
							// `this` is an instance of the InputParser
							config = this.parseJsonString();
		
							if( config == null )
							{
								throw new Error( "COULD NOT READ INPUT CONFIGURATION FILE. EXITING." );
								process.exit( 1 );
							}
		
		
							runner.runCommand( { command: cmd, configObject: config } );
						}
						catch( exception )
						{
							console.log( `Process exception:\n${exception}` );
							process.exit( 1 );
						}
					}
				);
			}
		);
		
			

    }
);
