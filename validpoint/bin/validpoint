#!/usr/bin/env node

/**
 * CW website validator access hub.
 * 
 * Invoking: 
 * ./bin/validpoint command (-d [domain1,[domain2,[domain3...]]])
 * See all commands and options:
 * ./bin/validpoint help
 */

require( "strict-mode" )(
() =>
{
	// Get an instance of the runner
	const CW_Runner = require( "../dist/CW_Runner.js" );
	const runner = new CW_Runner();

	// And an instance of the parser
	// const CW_InputParser =  require( "../dist/CW_InputParser.js" );
	// let config = null;

	let async = require("../node_modules/async");

	const CW_Constants =  require( "../dist/CW_Constants.js" );
	const colors = require( "../node_modules/colors" );
	colors.setTheme( CW_Constants.COLOR_THEME );

	let AdviceContent = require( "../dist/CW_AdviceContent" );

	let domainCounter = 0;

	CW_Runner.processinputArguments()
		.then(
			( inputOptions ) =>
			{	
				let cmds = inputOptions.command;
				let domains = CW_Runner.parseInputForDomains( { input: inputOptions } );

				async.eachSeries(
					domains,
					async ( domain ) =>
					{
						cmds = CW_Runner.parseInputForCommands( {domain: domain, input: inputOptions, arrayIndex: domainCounter} )
						let normalizedInput = CW_Runner.normalizeInput( {domain: domain, domains: domains, input: inputOptions} )

						let runParameters = 
						{
							domain: normalizedInput.domain,
							commands: cmds,
							inputOptions: normalizedInput.input,
							optionIndex: domainCounter
						}
						domainCounter++;

						await CW_Runner.printDomainHeadline( {config: runParameters.inputOptions, domain: runParameters.domain} )
							.then(
								(response) =>
								{
									CW_Runner.domainCommandRunner( {input: runParameters } )
										.then(
											(response) =>
											{
												console.log( "domainRunner then" );
												console.log( response ); // TODO: Print response only if not quiet
											}
										);
								}
							);

					}, // each series domains
					(error) =>
					{
						// There are no errors received here, so this is only reached on completion
					});// processinputArguments then
			}
		);
});
